#code


CREATE DATABASE ORG123;
SHOW DATABASES;
USE ORG123;

CREATE TABLE Worker (
    WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME CHAR(25),
    LAST_NAME CHAR(25),
    SALARY INT,
    JOINING_DATE DATETIME,
    DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
    (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
    (1, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR'),
    (2, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin'),
    (3, 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR'),
    (4, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin'),
    (5, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin'),
    (6, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account'),
    (7, 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account'),
    (8, 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 'Admin');

CREATE TABLE Bonus (
    WORKER_REF_ID INT,
    BONUS_AMOUNT INT,
    BONUS_DATE DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
        REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
    (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
    (1, 5000, '2016-02-20'),
    (2, 3000, '2016-06-11'),
    (3, 4000, '2016-02-20'),
    (1, 4500, '2016-02-20'),
    (2, 3500, '2016-06-11');
create table vitBhopal (id int primary key, name varchar(20) not null,
department varchar(25) not null);
insert into vitbhopal values (104,'Karthik','cs'),(103,'Arun','cs');

create table vit (id int primary key, name varchar(20) not null,
college varchar(25) not null);
insert into vit values (104,'Karthik','chennai'),(103,'Arun','bhopal');
select * from vit;

select * from vitbhopal;

select name as WinnerOfTheYear from vitbhopal
where id = (select id from vit where college='bhopal');






CREATE TABLE student12 (
    s_id INT PRIMARY KEY,
    s_name VARCHAR(25) NOT NULL,
    s_department VARCHAR(25) NOT NULL
);


INSERT INTO student12 VALUES 
(1001, 'Jayanth', 'ECE'),
(1002, 'Praveen', 'CSE'),
(1003, 'Logesh', 'Mech'),
(1006, 'Karthick', 'Aero'),
(1007, 'Mahesh', 'Civil');


SELECT * FROM student12;

DROP TABLE IF EXISTS vit;


CREATE TABLE VIT (
    s_id INT PRIMARY KEY,
    s_cgpa VARCHAR(5) NOT NULL
);


INSERT INTO VIT VALUES 
(1001, '7.2'),
(1002, '8.6'),
(1007, '9.25');

SELECT * FROM VIT;

SELECT * FROM  STUDENT CROSS JOIN VIT ;

SELECT * 
FROM Worker 
WHERE WORKER_ID IN (SELECT DISTINCT Manager_ID FROM Worker WHERE Manager_ID IS NOT NULL);


SELECT W.* 
FROM Worker W
INNER JOIN Manager M ON W.WORKER_ID = M.Manager_ID;










Question:1) Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from Worker table.
Answer:1)  SELECT * FROM Worker 
           WHERE FIRST_NAME LIKE '%a';

Question:2) Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
Answer:2):  SELECT * FROM Worker 
            WHERE FIRST_NAME LIKE '%a';

Question:3) Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
Answer:3)   SELECT * FROM Worker 
            WHERE FIRST_NAME LIKE '_____h'; 

Question:4). Write an SQL query to fetch the no. of workers for each department in the descending order.
Answer:4)  SELECT DEPARTMENT, COUNT(*) AS Worker_Count
           FROM Worker
           GROUP BY DEPARTMENT
          ORDER BY Worker_Count DESC;

Question:5) Write an SQL query to show one row twice in results from a table.
Answer:5)  (SELECT * FROM Worker WHERE WORKER_ID = 1)
            UNION ALL
           (SELECT * FROM Worker WHERE WORKER_ID = 1);



Question:6) Write an SQL query to fetch the departments that have less than five people in it.
Answer:5) SELECT DEPARTMENT 
          FROM Worker 
          GROUP BY DEPARTMENT 
          HAVING COUNT(WORKER_ID) < 5;



Question:7) Write an SQL query to fetch the last five records from a table.
Answer 7) SELECT * 
          FROM Worker 
          ORDER BY WORKER_ID DESC 
          LIMIT 5;
Question 8): Write an SQL query to print details of the Workers who are also Managers.
Answer ): SELECT W.* 
          FROM Worker W 
        JOIN Manager M ON W.WORKER_ID = M.WORKER_ID;





